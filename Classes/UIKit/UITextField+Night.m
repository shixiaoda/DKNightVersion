//
//  UITextField+Night.m
//  UITextField+Night
//
//  Copyright (c) 2015 Draveness. All rights reserved.
//
//  These files are generated by ruby script, if you want to modify code
//  in this file, you are supposed to update the ruby code, run it and
//  test it. And finally open a pull request.

#import "UITextField+Night.h"
#import "DKNightVersionManager.h"
#import <objc/runtime.h>

@interface UITextField ()

@property (nonatomic, strong) NSMutableDictionary<NSString *, DKPicker> *pickers;

@end

@implementation UITextField (Night)

+ (void)load {
    SEL selectors[] = {
      @selector(setTextColor:),
	  
    };

    for (NSUInteger index = 0; index < sizeof(selectors) / sizeof(SEL); ++index) {
        SEL originalSelector = selectors[index];
        SEL swizzledSelector = NSSelectorFromString([@"sm_hook_" stringByAppendingString:NSStringFromSelector(originalSelector)]);
        Method originalMethod = class_getInstanceMethod(self, originalSelector);
        Method swizzledMethod = class_getInstanceMethod(self, swizzledSelector);
        method_exchangeImplementations(originalMethod, swizzledMethod);
    }
}



- (void)sm_hook_setTextColor:(UIColor *)color {
    if (!color || [NSStringFromClass(self.window.class) isEqualToString:UIRemoteKeyboardWindow])
    {
        [self sm_hook_setTextColor:color];
        return;
    }
    if (self.dk_textColorPicker && [self.dk_textColorPicker(YES) isEqual:color])
    {
        [self sm_hook_setTextColor:self.dk_textColorPicker(NO)];
    }
    else
    {
        self.dk_textColorPicker = [DKColor defaultColorPicker:color];
    }
}




- (DKColorPicker)dk_textColorPicker {
    return objc_getAssociatedObject(self, @selector(dk_textColorPicker));
}

- (void)setDk_textColorPicker:(DKColorPicker)picker {
    objc_setAssociatedObject(self, @selector(dk_textColorPicker), picker, OBJC_ASSOCIATION_COPY_NONATOMIC);

    [self sm_hook_setTextColor:picker(NO)];
    [self.pickers setValue:[picker copy] forKey:@"sm_hook_setTextColor:"];
}
    


@end
